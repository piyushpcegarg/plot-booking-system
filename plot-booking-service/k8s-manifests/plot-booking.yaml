apiVersion: v1
kind: Secret
metadata:
  name: plot-booking-tls
  namespace: default
data:
  tls.crt: base64 encoded cert
  tls.key: base64 encoded key
type: kubernetes.io/tls
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: plot-booking-router
spec:
  tls:
  - hosts:
    - api.yourdomain.com
    # This assumes tls-secret exists and the SSL
    # certificate contains a CN for api.yourdomain.com
    secretName: plot-booking-tls
  rules:
    - host: api.yourdomain.com
      http:
        paths:
          - path: /plots
            pathType: Prefix
            backend:
              # This assumes plot-booking-service exists and routes to healthy endpoints
              serviceName: plot-booking-service
              servicePort: 80
          - path: /plots/*
            pathType: Prefix
            backend:
              serviceName: plot-booking-service
              servicePort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: plot-booking-service
spec:
  type: ClusterIP
  selector:
    app: plot-booking
  ports:
  - port: 80
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: plot-booking-deployment
spec:
  selector:
    matchLabels:
      app: plot-booking
  template:
    metadata:
      labels:
        app: plot-booking
    spec:
      containers:
      - name: plot-booking
        image: plot-booking-service:1.0.0
        ports:
          - name: http
            containerPort: 8080
            protocol: TCP
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: http
          initialDelaySeconds: 30
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: http
          initialDelaySeconds: 30